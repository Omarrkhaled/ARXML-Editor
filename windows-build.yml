name: Windows Qt6 Build

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      BUILD_TYPE: Release
      APP_NAME: arxml_editor
      DEPLOY_DIR: deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install Qt 6 (qtbase + qttools so we have windeployqt)
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.3
          host: windows
          arch: win64_msvc2019_64
          modules: qtbase qttools
          cache: true

      - name: Setup CMake + Ninja
        uses: lukka/get-cmake@v3.29.3

      - name: Configure (Ninja + MSVC)
        run: |
          cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build
        run: |
          cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

      # Bundle Qt runtime dependencies into the same folder as the exe
      - name: Prepare deploy dir
        run: |
          mkdir ${{ env.DEPLOY_DIR }}
          copy build\\${{ env.APP_NAME }}.exe ${{ env.DEPLOY_DIR }}\\${{ env.APP_NAME }}.exe

      - name: Run windeployqt
        shell: cmd
        run: |
          windeployqt.exe ${{ env.DEPLOY_DIR }}\\${{ env.APP_NAME }}.exe --compiler-runtime --verbose 1

      # (Optional) include schemas or sample files if you want them in the zip
      # - name: Copy schemas
      #   run: |
      #     if exist schemas ( xcopy schemas ${{ env.DEPLOY_DIR }}\\schemas /E /I /Y )

      - name: Create ZIP
        run: |
          powershell -Command "Compress-Archive -Path '${{ env.DEPLOY_DIR }}\\*' -DestinationPath '${{ env.APP_NAME }}-windows.zip' -Force"

      - name: Upload Artifact (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-windows
          path: ${{ env.APP_NAME }}-windows.zip
          if-no-files-found: error
